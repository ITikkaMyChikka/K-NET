import torch
import src.parameters as params

T = params.T_cv
T_dec = T*params.ratio_cv
q = params.q_cv



#######################
### DATA GENERATION ###
#######################
F_gen = torch.tensor([[1, T, 0.5*T**2, 0, 0, 0],
                      [0, 1, T, 0, 0, 0],
                      [0, 0, 1, 0, 0, 0],
                      [0, 0, 0, 1, T, 0.5*T**2],
                      [0, 0, 0, 0, 1, T],
                      [0, 0, 0, 0, 0, 1]]).float()

Q_gen = torch.tensor([[0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],]).float()

H_gen = torch.tensor([[1, 0, 0, 0, 0, 0],
                      [0, 1, 0, 0, 0, 0],
                      [0, 0, 1, 0, 0, 0],
                      [0, 0, 0, 1, 0, 0],
                      [0, 0, 0, 0, 1, 0],
                      [0, 0, 0, 0, 0, 1]]).float()

R_gen = torch.tensor([[0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0]]).float()




##############################
### FULL OBSERVATION MODEL ###
##############################

F_FO = torch.tensor([[1, T_dec, 0.5*T_dec**2, 0, 0, 0],
                     [0, 1, T_dec, 0, 0, 0],
                     [0, 0, 1, 0, 0, 0],
                     [0, 0, 0, 1, T_dec, 0.5*T_dec**2],
                     [0, 0, 0, 0, 1, T_dec],
                     [0, 0, 0, 0, 0, 1]]).float()

Q_FO = torch.tensor([[T_dec**4/4, T_dec**3/2, T_dec**2/2, 0, 0, 0],
                     [T_dec**3/2, T_dec**2, T_dec, 0, 0, 0],
                     [T_dec**2/2, T_dec, 1, 0, 0, 0],
                     [0, 0, 0, T_dec**4/4, T_dec**3/2, T_dec**2/2],
                     [0, 0, 0,T_dec**3/2, T_dec**2, T_dec],
                     [0, 0, 0, T_dec**2/2, T_dec, 1]]).float()

H_FO = torch.tensor([ [1, 0, 0, 0, 0, 0],
                      [0, 1, 0, 0, 0, 0],
                      [0, 0, 1, 0, 0, 0],
                      [0, 0, 0, 1, 0, 0],
                      [0, 0, 0, 0, 1, 0],
                      [0, 0, 0, 0, 0, 1]]).float()

R_FO = torch.tensor([[1, 0, 0, 0, 0, 0],
                     [0, 1, 0, 0, 0, 0],
                     [0, 0, 1, 0, 0, 0],
                     [0, 0, 0, 1, 0, 0],
                     [0, 0, 0, 0, 1, 0],
                     [0, 0, 0, 0, 0, 1]]).float()




############################
### POSITION OBSERVATION ###
############################

F_PO = torch.tensor([[1, T_dec, 0.5*T_dec**2, 0, 0, 0],
                     [0, 1, T_dec, 0, 0, 0],
                     [0, 0, 1, 0, 0, 0],
                     [0, 0, 0, 1, T_dec, 0.5*T_dec**2],
                     [0, 0, 0, 0, 1, T_dec],
                     [0, 0, 0, 0, 0, 1]]).float()

Q_PO = torch.tensor([[T_dec**4/4, T_dec**3/2, T_dec**2/2, 0, 0, 0],
                     [T_dec**3/2, T_dec**2, T_dec, 0, 0, 0],
                     [T_dec**2/2, T_dec, 1, 0, 0, 0],
                     [0, 0, 0, T_dec**4/4, T_dec**3/2, T_dec**2/2],
                     [0, 0, 0,T_dec**3/2, T_dec**2, T_dec],
                     [0, 0, 0, T_dec**2/2, T_dec, 1]]).float()

H_PO = torch.tensor([[1, 0, 0, 0, 0, 0],
                     [0, 0, 0, 1, 0, 0]]).float()

R_PO = torch.tensor([[1, 0],
                     [0, 1]]).float()


################################
### ACCELERATION OBSERVATION ###
################################

F_AO = torch.tensor([[1, T_dec, 0.5*T_dec**2, 0, 0, 0],
                     [0, 1, T_dec, 0, 0, 0],
                     [0, 0, 1, 0, 0, 0],
                     [0, 0, 0, 1, T_dec, 0.5*T_dec**2],
                     [0, 0, 0, 0, 1, T_dec],
                     [0, 0, 0, 0, 0, 1]]).float()

Q_AO = torch.tensor([[T_dec**4/4, T_dec**3/2, T_dec**2/2, 0, 0, 0],
                     [T_dec**3/2, T_dec**2, T_dec, 0, 0, 0],
                     [T_dec**2/2, T_dec, 1, 0, 0, 0],
                     [0, 0, 0, T_dec**4/4, T_dec**3/2, T_dec**2/2],
                     [0, 0, 0,T_dec**3/2, T_dec**2, T_dec],
                     [0, 0, 0, T_dec**2/2, T_dec, 1]]).float()

H_AO = torch.tensor([[0, 0, 1, 0, 0, 0],
                     [0, 0, 0, 0, 0, 1]]).float()

R_AO = torch.tensor([[1, 0],
                     [0, 1]]).float()


#############################################
### POSITION AND ACCELERATION OBSERVATION ###
#############################################

F_PAO = torch.tensor([[1, T_dec, 0.5*T_dec**2, 0, 0, 0],
                      [0, 1, T_dec, 0, 0, 0],
                      [0, 0, 1, 0, 0, 0],
                      [0, 0, 0, 1, T_dec, 0.5*T_dec**2],
                      [0, 0, 0, 0, 1, T_dec],
                      [0, 0, 0, 0, 0, 1]]).float()

Q_PAO = torch.tensor([[T_dec**4/4, T_dec**3/2, T_dec**2/2, 0, 0, 0],
                      [T_dec**3/2, T_dec**2, T_dec, 0, 0, 0],
                      [T_dec**2/2, T_dec, 1, 0, 0, 0],
                      [0, 0, 0, T_dec**4/4, T_dec**3/2, T_dec**2/2],
                      [0, 0, 0,T_dec**3/2, T_dec**2, T_dec],
                      [0, 0, 0, T_dec**2/2, T_dec, 1]]).float()

H_PAO = torch.tensor([[1, 0, 0, 0, 0, 0],
                      [0, 0, 1, 0, 0, 0],
                      [0, 0, 0, 1, 0, 0],
                      [0, 0, 0, 0, 0, 1]]).float()

R_PAO = torch.tensor([[1, 0, 0, 0],
                      [0, 1, 0, 0],
                      [0, 0, 1, 0],
                      [0, 0, 0, 1]]).float()





